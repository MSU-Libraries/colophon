---
manifest:
  # String that can be used to identify row (used in output and logs)
  id: "{{ basename }}"
  # Only run on rows in the manifest matching these parameters
  filter:
    # equals, startswith, endswith, regex, ignorecase, greaterthan, lessthan
    - value: mediatype
      equals: audio
      ignorecase: true
  # For each manifest row, match the following files
  files:
    - label: pres
      # value: "{{ file.name }}"    # Default for files section
      startswith: "{{ basename }}"
      endswith: '.wav'
    - label: access
      startswith: "{{ basename }}"
      endswith: '.mp3'
    - label: pres_hash
      startswith: "{{ basename }}"
      endswith: '.wav.md5'
    - label: access_hash
      startswith: "{{ basename }}"
      endswith: '.mp4.md5'
    - label: mods
      startswith: "{{ basename }}"
      endswith: '_MODS.xml'
    - label: asset
      multiple: true
      optional: true
      startswith: "{{ basename }}"
      regex: '_Asset.*\.tif$'
    - label: asset_hash
      linkedto: asset
      startswith: "{{ asset | basename }}"
      endswith: '.md5'
    - label: ephemera
      multiple: true
      optional: true
      startswith: "{{ basename }}"
      regex: '_Ephemera.*\.tif$'
    - label: ephemera_hash
      linkedto: ephemera
      startswith: "{{ ephemera | basename }}"
      endswith: '.md5'

stages:
  # Run access hash check
  stage1.1:
    script: "scripts/verify-hash -c {{ access }} -f {{ access_hash }} -v -J {{ results_path }}"
  # Run preservation hash check
  stage1.2:
    script: "scripts/verify-hash -c {{ pres }} -f {{ pres_hash }} -v -J {{ results_path }}"
  # Run assets hash check
  stage1.3:
    script: "scripts/verify-hash -c {{ asset }} -f {{ asset_hash }} -v -J {{ results_path }}"
    loopvars:
      - asset
      - asset_hash
  # Run ephemera hash check
  stage1.4:
    script: "scripts/verify-hash -c {{ ephemera }} -f {{ ephemera_hash }} -v -J {{ results_path }}"
    loopvars:
      - ephemera
      - ephemera_hash

  # Validate access audio traits
  stage2.1:
    script: "scripts/validate-audio -c {{ access }} -s 44100 -m CBR -b null -v -J {{ results_path }}"
  # Validate preservation audio traits
  stage2.2:
    script: "scripts/validate-audio -c {{ pres }} -s 96000 -m CBR -b 24 -v -J {{ results_path }}"
  # Verify file fingerprint
  #stage2.3:
  #  script: "echo TODO"

  # Verify video frames
  #stage3.1:
  #  script: "echo TODO"
